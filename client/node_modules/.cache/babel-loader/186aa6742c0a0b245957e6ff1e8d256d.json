{"remainingRequest":"/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/babel-loader/lib/index.js!/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/src/components/BookingsGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/src/components/BookingsGrid.vue","mtime":1587549665646},{"path":"/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/week_08/day_3/all_day_lab/client/guests/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnLi4vbWFpbic7CmltcG9ydCBCb29raW5nU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9Cb29raW5nU2VydmljZSc7CmltcG9ydCBCb29raW5nIGZyb20gJy4vQm9va2luZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYm9va2luZ3MtZ3JpZCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJvb2tpbmdzOiBbXQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgICdib29raW5nJzogQm9va2luZwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5mZXRjaERhdGEoKTsKICAgIGV2ZW50QnVzLiRvbignYm9va2luZy1hZGRlZCcsIGZ1bmN0aW9uIChib29raW5nKSB7CiAgICAgIHJldHVybiBfdGhpcy5ib29raW5ncy5wdXNoKGJvb2tpbmcpOwogICAgfSk7CiAgICBldmVudEJ1cy4kb24oJ2Jvb2tpbmctZGVsZXRlZCcsIGZ1bmN0aW9uIChpZCkgewogICAgICB2YXIgaW5kZXggPSBfdGhpcy5ib29raW5nLmZpbmRJbmRleChmdW5jdGlvbiAoYm9va2luZykgewogICAgICAgIHJldHVybiBib29raW5nLl9pZCA9PT0gaWQ7CiAgICAgIH0pOwoKICAgICAgX3RoaXMuYm9va2luZ3Muc3BsaWNlKGluZGV4LCAxKTsKICAgIH0pOwogIH0sCiAgbWVodG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgQm9va2luZ1NlcnZpY2UuZ2V0Qm9va2luZ3MoKS50aGVuKGZ1bmN0aW9uIChib29raW5ncykgewogICAgICAgIHJldHVybiBfdGhpczIuYm9va2luZ3MgPSBib29raW5nczsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["BookingsGrid.vue"],"names":[],"mappings":";;;;;;;;;AAQA,SAAA,QAAA,QAAA,SAAA;AACA,OAAA,cAAA,MAAA,4BAAA;AACA,OAAA,OAAA,MAAA,WAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,eAAA;AADA,GAPA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,SAAA,SAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,eAAA,EAAA,UAAA,OAAA;AAAA,aAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AAAA,KAAA;AAEA,IAAA,QAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,GAAA,KAAA,EAAA;AAAA,OAAA,CAAA;;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAHA;AAIA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,MAAA,cAAA,CAAA,WAAA,GACA,IADA,CACA,UAAA,QAAA;AAAA,eAAA,MAAA,CAAA,QAAA,GAAA,QAAA;AAAA,OADA;AAEA;AAJA;AAnBA,CAAA","sourcesContent":["<template lang=\"html\">\n  <div id=\"bookingsGrid\">\n    <booking v-for=\"booking, index in bookings\" :key=\"index\"\n    :booking=\"booking\" />\n  </div>\n</template>\n\n<script>\nimport { eventBus } from '../main';\nimport BookingService from '../services/BookingService'\nimport Booking from './Booking';\nexport default {\n  name: \"bookings-grid\",\n  data () {\n    return {\n      bookings: []\n    }\n  },\n  components: {\n    'booking': Booking\n  },\n  mounted(){\n    this.fetchData();\n    eventBus.$on('booking-added', booking => this.bookings.push(booking));\n\n    eventBus.$on('booking-deleted', id => {\n      const index = this.booking.findIndex(booking => booking._id === id);\n      this.bookings.splice(index, 1);\n    })\n  },\n  mehtods: {\n    fetchData(){\n      BookingService.getBookings()\n      .then(bookings => this.bookings = bookings);\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n</style>\n"],"sourceRoot":"src/components"}]}